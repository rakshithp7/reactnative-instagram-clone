type User
@model
@key(
  name: "byUsername"
  fields: ["username", "id"]
  queryField: "userByUsername"
) {
  id: ID!
  username: String!
  name: String!
  image: String!
  posts: [Post] @connection(keyName: "byUser", fields: ["id"])
  stories: [Story] @connection(keyName: "storyByUser", fields: ["id"])
}

type Post
@model
@key(name: "byUser", fields: ["userID"], queryField: "postByUserID") {
  id: ID!
  caption: String!
  image: String!
  userID: ID!
  comments: [Comment] @connection(keyName: "byPost", fields: ["id"])
  likes: [Like] @connection(keyName: "likesByPost", fields: ["id"])
  user: User @connection(fields: ["userID"])
}

type Comment
@model
@key(name: "byPost", fields: ["postID"], queryField: "commentsByPost") {
  id: ID!
  content: String!
  userID: ID!
  postID: ID!
  post: Post @connection(fields: ["postID"])
}

type Like
@model(queries: null)
@key(name: "byUser", fields: ["userID", "postID"])
@key(name: "likesByPost", fields: ["postID", "userID"]) {
  id: ID!
  userID: ID!
  postID: ID!
  user: User! @connection(fields: ["userID"])
  post: Post! @connection(fields: ["postID"])
}

type Story @model @key(name: "storyByUser", fields: ["userID"]) {
  id: ID!
  image: String!
  userID: ID!
  user: User @connection(fields: ["userID"])
}
